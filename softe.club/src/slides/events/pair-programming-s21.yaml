---
title: Pair Programming - Spring 2021
slides:
  - type: title
    title: Pair Programming 2021
    subtitle: Hosted by SEC & SWiCS
    img: logo
    name: title
  - name: intro
    content: |
      # Pair Up!

      - Fill out the form sent in chat
      - You will be randomly paired based on skill level
        - Unless you have a partner in mind

      # Quick Tips

      - Don't be afraid to talk!
        - The ability to communicate your thoughts is an essential skill in programming
      - Try not to let one person do all the work.
        - Note that this is different from designating someone to type the code

  - name: replit
    content: |
      # How to get started

      - Go to repl.it
      - Click start coding and log in (sign up if you don't already have an account)
        - For new users, set your username and set up your profile

      *Only one partner has to do the following*

      - Click on "+ New repl" in the top left corner of your screen
      - Communicate with your partner on what language you want to work in and name your project
      - Click share in the top right corner of your screen
      - Invite your partner
  - name: last step
    type: title
    title: The Fun Part
    subtitle: Time to get coding!
  - content: |
      # Solution for 7 Segment Display

      ```python
      print(int(input(), 16) in [0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f])
      ```
  - content: |
      # Solution for Strings!

      *Disclaimer: This solution is O(n³). The optimized solution is O(n²).*

      ```python
      s = input()
      answer = ""
      for start in range(len(s) - 1):
        for end in range(start + 1, len(s)):
          substr = s[start:end]
          if not substr:
            continue
          c = s.count(substr)
          if c >= 2 and len(substr) > len(answer):
            answer = substr
      print(answer)
      ```
  - content: |
      # Solution for Pairing Programmers

      ```python
      ar = list(map(int, input().rstrip().split())))
      levels = {}
      for v in ar:
        if v in levels:
          levels[v] += 1
        else:
          levels[v] = 1
      numPairs = 0
      for skill in levels:
        numPairs += levels[skill] // 2
      print(numPairs)
      ```
